@model SAM1.Models.LogonUserModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@helper GetLogonMessage()
{
var message = TempData["LogonMessage"] == null ? "" : TempData["LogonMessage"];
    @message;
}

<h2>Login</h2>
<div>
    @Html.ActionLink("Go back to Home Page?", "Index")
</div>

@if (TempData.ContainsKey("IsAuthorised") && (bool)TempData["IsAuthorised"])
{
    using (Html.BeginForm("Authenticate", "Home"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <div class="form-group">
                @Html.Label("Challenge", new { @class = "control -label col-md-2" })
                <div class="col-md-10">
                    <input type="password" name="ChallengeResponse" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ChallengeResponse, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Authenticate" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    using (Html.BeginForm("logOn", "Home"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <p>
                @GetLogonMessage()
            </p>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="Username" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="password" name="Password" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Login" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}

<div class="container">
    <br>
    <div id="myCarousel" class="carousel slide" data-ride="carousel">
        <!-- Indicators -->
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
            <li data-target="#myCarousel" data-slide-to="3"></li>
        </ol>

        <!-- Wrapper for slides -->
        <div class="carousel-inner" role="listbox">
            <div class="item active">
                <img src="~/Images/Attendance.jpg" alt="Attendance" width="1200" height="200">
            </div>

            <div class="item">
                <img src="~/Images/Attendance1.jpg" alt="Attendance1" width="1200" height="200">
            </div>

            <div class="item">
                <img src="~/Images/Attendance2.jpg" alt="Attendance2" width="1200" height="200">
            </div>
        </div>

        <!-- Left and right controls -->
        <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
